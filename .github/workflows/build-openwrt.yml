```yaml
name: 构建自定义 OpenWrt 固件

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt install -y wget tar xz-utils gzip curl jq zstd

      - name: 清理工作目录
        run: |
          rm -rf openwrt-imagebuilder

      - name: 下载 OpenWrt Image Builder
        run: |
          VERSION="24.10.1"
          curl -f --connect-timeout 20 --retry 5 --location -o openwrt-imagebuilder-${VERSION}-x86-64.Linux-x86_64.tar.zst https://downloads.openwrt.org/releases/24.10.1/targets/x86/64/openwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64.tar.zst
          zstd -d openwrt-imagebuilder-${VERSION}-x86-64.Linux-x86_64.tar.zst -o openwrt-imagebuilder-${VERSION}-x86-64.Linux-x86_64.tar
          tar -xvf openwrt-imagebuilder-${VERSION}-x86-64.Linux-x86_64.tar
          mv openwrt-imagebuilder-${VERSION}-x86-64.Linux-x86_64 openwrt-imagebuilder
          cd openwrt-imagebuilder
          if [ ! -f bin/opkg-make-index ]; then
            echo "Error: bin/opkg-make-index not found in openwrt-imagebuilder"
            ls -la bin/
            exit 1
          fi

      - name: 下载第三方 IPK 包
        run: |
          cd openwrt-imagebuilder
          mkdir -p packages
          rm -rf packages/*
          cd packages
          download_latest_ipk() {
            PACKAGE="$1"
            PATTERN="$2"
            BASE_URL="https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/"
            HTML=$(curl -s "$BASE_URL")
            LATEST=$(echo "$HTML" | grep -o 'href="[^"]*\.ipk"' | sed 's/href="//;s/"$//' | grep -E "$PATTERN" | sort -V | tail -1)
            if [ -n "$LATEST" ]; then
              wget "${BASE_URL}${LATEST}"
            else
              echo "No matching file for $PACKAGE"
            fi
          }
          download_latest_ipk "luci-theme-argon" "luci-theme-argon_.*_all\.ipk"
          download_latest_ipk "luci-app-argon-config" "luci-app-argon-config_.*_all\.ipk"
          download_latest_ipk "luci-app-openclash" "luci-app-openclash_.*_all\.ipk"
          download_latest_ipk "luci-app-adguardhome" "luci-app-adguardhome_.*_all\.ipk"
          download_latest_ipk "luci-app-dockerman" "luci-app-dockerman_.*_all\.ipk"
          download_latest_ipk "luci-app-lucky" "luci-app-lucky_.*_all\.ipk"
          download_latest_ipk "luci-app-store" "luci-app-store_.*_all\.ipk"
          download_latest_ipk "luci-app-nikki" "luci-app-nikki_.*_all\.ipk"
          download_latest_ipk "luci-app-quickstart" "luci-app-quickstart_.*_all\.ipk"
          download_latest_ipk "adguardhome" "adguardhome_.*_x86_64\.ipk"
          download_latest_ipk "luci-app-upnp" "luci-app-upnp_.*_all\.ipk"
          download_latest_ipk "kmod-tun" "kmod-tun_.*_x86_64\.ipk"
          download_latest_ipk "kmod-ipt-fullconenat" "kmod-ipt-fullconenat_.*_x86_64\.ipk"
          cd ..

      - name: 创建本地软件源
        run: |
          cd openwrt-imagebuilder
          chmod +x bin/opkg-make-index
          bin/opkg-make-index ./packages > ./packages/Packages
          gzip -9c ./packages/Packages > ./packages/Packages.gz
          cp ../custom_repositories.conf repositories.conf

      - name: 复制自定义配置文件
        run: |
          cd openwrt-imagebuilder
          cp -r ../custom_files files

      - name: 构建固件
        run: |
          cd openwrt-imagebuilder
          make image PROFILE="generic" \
            PACKAGES="$(cat ../packages.conf)" \
            FILES="files/" \
            ROOTFS_PARTSIZE=$(grep ROOTFS_PARTSIZE ../config.sh | cut -d'=' -f2)

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: openwrt-imagebuilder/bin/targets/x86/64/*.img.gz
```
