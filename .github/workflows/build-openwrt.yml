name: Build ImmortalWrt for x86_64

on:
  workflow_dispatch:  # 手动触发构建
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y wget unzip curl jq

    - name: Download ImmortalWrt ImageBuilder (kernel 6.6)
      run: |
        # 使用最新ImmortalWrt 24.10.x，支持内核6.6
        wget https://downloads.immortalwrt.org/releases/24.10.2/targets/x86/64/immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.xz
        tar -xvf immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.xz
        mv immortalwrt-imagebuilder-* imagebuilder

    - name: Download latest plugin IPKs (auto update)
      run: |
        mkdir -p packages
        # 示例：下载OpenClash最新IPK（替换为实际Release URL，根据插件调整）
        curl -s https://api.github.com/repos/vernesong/OpenClash/releases/latest | jq -r '.assets[] | select(.name | endswith("_x86_64.ipk")) | .browser_download_url' | xargs -I {} curl -L {} -o packages/luci-app-openclash.ipk
        # AdGuardHome
        curl -s https://api.github.com/repos/rufengsuixing/luci-app-adguardhome/releases/latest | jq -r '.assets[] | select(.name | endswith("_x86_64.ipk")) | .browser_download_url' | xargs -I {} curl -L {} -o packages/luci-app-adguardhome.ipk
        # quickstart（假设从兼容仓库，如wukongdaily/store）
        curl -L https://github.com/wukongdaily/store/raw/main/run/x86/quickstart/luci-app-quickstart_x86_64.ipk -o packages/luci-app-quickstart.ipk
        # dockerman
        curl -s https://api.github.com/repos/lisaac/luci-app-dockerman/releases/latest | jq -r '.assets[] | select(.name | endswith("_x86_64.ipk")) | .browser_download_url' | xargs -I {} curl -L {} -o packages/luci-app-dockerman.ipk
        # nikki（假设存在，替换URL）
        curl -L https://example.com/luci-app-nikki_x86_64.ipk -o packages/luci-app-nikki.ipk  # 如无，搜索兼容IPK
        # store (iStore)
        curl -L https://github.com/linkease/istore/raw/main/packages/luci-app-store_x86_64.ipk -o packages/luci-app-store.ipk
        # upnp
        curl -L https://downloads.immortalwrt.org/releases/24.10.2/packages/x86_64/luci/luci-app-upnp_x86_64.ipk -o packages/luci-app-upnp.ipk
        # lucky
        curl -L https://github.com/gdy666/luci-app-lucky/raw/master/luci-app-lucky_x86_64.ipk -o packages/luci-app-lucky.ipk
        # 主题: luci-theme-argon
        curl -s https://api.github.com/repos/jerrykuku/luci-theme-argon/releases/latest | jq -r '.assets[] | select(.name | endswith("_x86_64.ipk")) | .browser_download_url' | xargs -I {} curl -L {} -o packages/luci-theme-argon.ipk
        # 添加内核依赖示例（针对OpenClash等，如iptables-mod-tproxy）
        curl -L https://downloads.immortalwrt.org/releases/24.10.2/packages/x86_64/base/iptables-mod-tproxy_x86_64.ipk -o packages/iptables-mod-tproxy.ipk
        # 根据插件需要，添加更多依赖...

    - name: Prepare custom files and packages
      run: |
        chmod +x shell/custom-packages.sh
        . shell/custom-packages.sh  # 加载自定义包列表

    - name: Build firmware
      working-directory: imagebuilder
      run: |
        make image PROFILE="generic" \
          PACKAGES="$CUSTOM_PACKAGES luci-theme-argon" \
          FILES="../files" \
          EXTRA_IMAGE_NAME="custom-04543473-$(date +%Y%m%d)" \
          ROOTFS_PARTSIZE=1024  # 系统分区1024MB（boot默认32MB，通过img生成控制）
          # 其他参数：如启用Docker -docker

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-x86_64
        path: imagebuilder/bin/targets/x86/64/*.img.gz
