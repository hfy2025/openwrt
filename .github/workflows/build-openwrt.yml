name: 构建自定义 OpenWrt 固件

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt install -y wget tar xz-utils gzip curl jq

      - name: 下载 OpenWrt Image Builder
        run: |
          VERSION="24.10.2"
          URL="https://downloads.openwrt.org/releases/${{ inputs.version }}/targets/${{ inputs.target }}/${{ inputs.subtarget }}/openwrt-imagebuilder-${{ inputs.version }}-${{ inputs.target }}-${{ inputs.subtarget }}.Linux-x86_64.tar.zst"
          wget $URL || wget "http://mirror2.openwrt.org/releases/${{ inputs.version }}/targets/${{ inputs.target }}/${{ inputs.subtarget }}/openwrt-imagebuilder-${{ inputs.version }}-${{ inputs.target }}-${{ inputs.subtarget }}.Linux-x86_64.tar.zst"
          zstd -d *.tar.zst
          tar -xvf *.tar
          cd openwrt-imagebuilder-*

      - name: 下载第三方 IPK 包
        run: |
          cd openwrt-imagebuilder
          mkdir packages
          cd packages
          
          # 定义函数以下载最新 IPK
          download_latest_ipk() {
            REPO=$1
            PATTERN=$2
            URL=$(curl -s "https://api.github.com/repos/${REPO}/releases/latest" | jq -r '.assets[] | .browser_download_url' | grep "${PATTERN}")
            for u in $URL; do
              wget $u
            done
          }
          
          # luci-theme-argon 和 luci-app-argon-config
          download_latest_ipk "jerrykuku/luci-theme-argon" "luci-theme-argon_.*_all.ipk"
          download_latest_ipk "jerrykuku/luci-app-argon-config" "luci-app-argon-config_.*_all.ipk"
          
          # luci-app-openclash
          download_latest_ipk "vernesong/OpenClash" "luci-app-openclash_.*_all.ipk"
          
          # luci-app-adguardhome
          download_latest_ipk "rufengsuixing/luci-app-adguardhome" "luci-app-adguardhome_.*_all.ipk"
          
          # luci-app-dockerman
          download_latest_ipk "lisaac/luci-app-dockerman" "luci-app-dockerman_.*_all.ipk"
          
          # luci-app-lucky
          download_latest_ipk "gdy666/luci-app-lucky" "luci-app-lucky_.*_all.ipk"
          
          # luci-app-store (从 iStore 下载最新版本)
          ISTORE_URL="https://istore.linkease.com/repo/all/packages/"
          LATEST_STORE=$(curl -s $ISTORE_URL | grep -o 'luci-app-store_git-[^"]*_all.ipk' | sort -V | tail -1)
          wget "${ISTORE_URL}${LATEST_STORE}"
          
          # luci-app-quickstart 无预编译 IPK，需使用 SDK 构建，暂时跳过
          
          cd ..

      - name: 创建本地软件源
        run: |
          cd openwrt-imagebuilder
          bin/opkg-make-index ./packages > ./packages/Packages
          gzip -9c ./packages/Packages > ./packages/Packages.gz
          cp ../custom_repositories.conf repositories.conf

      - name: 复制自定义配置文件
        run: |
          cd openwrt-imagebuilder
          cp -r ../custom_files files

      - name: 构建固件
        run: |
          cd openwrt-imagebuilder
          make image PROFILE="generic" \
            PACKAGES="$(cat ../packages.conf)" \
            FILES="files/" \
            ROOTFS_PARTSIZE=$(grep ROOTFS_PARTSIZE ../config.sh | cut -d'=' -f2)

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: openwrt-imagebuilder/bin/targets/x86/64/*.img.gz
