name: 构建 OpenWrt 固件

on:
  workflow_dispatch:
    inputs:
      版本:
        description: 'OpenWrt 版本号 (如 24.10.2)'
        required: true
        default: '24.10.2'
      目标:
        description: '目标架构 (如 x86)'
        required: true
        default: 'x86'
      子目标:
        description: '子目标 (如 64)'
        required: true
        default: '64'
      配置文件:
        description: '设备配置文件 (如 generic)'
        required: true
        default: 'generic'
      分区大小:
        description: '根文件系统分区大小 (MiB, 如 256)'
        required: true
        default: '256'

jobs:
  构建任务:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4

      - name: 安装 zstd
        run: sudo apt-get update && sudo apt-get install -y zstd

      - name: 下载 OpenWrt 镜像构建工具
        run: |
          URL="https://downloads.openwrt.org/releases/${{ inputs.版本 }}/targets/${{ inputs.目标 }}/${{ inputs.子目标 }}/openwrt-imagebuilder-${{ inputs.版本 }}-${{ inputs.目标 }}-${{ inputs.子目标 }}.Linux-x86_64.tar.zst"
          wget $URL || wget "http://mirror2.openwrt.org/releases/${{ inputs.版本 }}/targets/${{ inputs.目标 }}/${{ inputs.子目标 }}/openwrt-imagebuilder-${{ inputs.版本 }}-${{ inputs.目标 }}-${{ inputs.子目标 }}.Linux-x86_64.tar.zst"
          zstd -d *.tar.zst
          tar -xvf *.tar
          cd openwrt-imagebuilder-*

      - name: 下载第三方插件包
        working-directory: ./openwrt-imagebuilder-*
        run: |
          mkdir -p packages
          cd packages
          # luci-app-openclash
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-openclash_0.117.3-1_all.ipk
          # luci-app-adguardhome
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-adguardhome_1.6.5-2_all.ipk
          # luci-app-quickstart
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-quickstart_0.0.1-20240511_all.ipk
          # luci-app-dockerman
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-dockerman_1.2-20240511_all.ipk
          # luci-app-nikki
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-nikki_2.1.2-1_all.ipk
          # luci-app-store
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-store_0.2.5-1_all.ipk
          # luci-app-upnp
          wget https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/luci-app-upnp_0.2.5-1_all.ipk
          # luci-app-lucky
          wget https://github.com/gdy666/luci-app-lucky/releases/download/v2.15.8/luci-app-lucky_2.15.8_all.ipk
          cd ..

      - name: 更新软件源并添加自定义源
        working-directory: ./openwrt-imagebuilder-*
        run: |
          echo "src/gz openwrt_luci https://downloads.openwrt.org/releases/${{ inputs.版本 }}/packages/${{ inputs.目标 }}/luci" >> repositories.conf
          echo "src/gz custom_packages file://${PWD}/packages" >> repositories.conf
          make defconfig

      - name: 构建自定义固件
        working-directory: ./openwrt-imagebuilder-*
        run: |
          PACKAGES="luci luci-theme-argon luci-app-openclash luci-app-adguardhome luci-app-quickstart luci-app-dockerman luci-app-nikki luci-app-store luci-app-upnp luci-app-lucky adguardhome dnsmasq-full -dnsmasq"
          make image PROFILE="${{ inputs.配置文件 }}" PACKAGES="$PACKAGES" FILES="../files/" EXTRA_IMAGE_NAME="自定义" ROOTFS_PARTSIZE="${{ inputs.分区大小 }}"

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-固件
          path: ./openwrt-imagebuilder-*/bin/targets/${{ inputs.目标 }}/${{ inputs.子目标 }}/*
