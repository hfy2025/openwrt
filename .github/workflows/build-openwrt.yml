name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenWrt version (e.g., 24.10.2)'
        required: true
        default: '24.10.2'
      target:
        description: 'Target (e.g., x86)'
        required: true
        default: 'x86'
      subtarget:
        description: 'Subtarget (e.g., 64)'
        required: true
        default: '64'
      profile:
        description: 'Profile (e.g., generic)'
        required: true
        default: 'generic'
      rootfs_size:
        description: 'Rootfs partition size in MiB (e.g., 256)'
        required: true
        default: '256'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download OpenWrt Image Builder
        run: |
          URL="https://downloads.openwrt.org/releases/${{ inputs.version }}/targets/${{ inputs.target }}/${{ inputs.subtarget }}/openwrt-imagebuilder-${{ inputs.version }}-${{ inputs.target }}-${{ inputs.subtarget }}.Linux-x86_64.tar.xz"
          wget $URL
          tar -xvf *.tar.xz
          cd openwrt-imagebuilder-*

      - name: Update feeds and add custom repositories (for third-party plugins)
        working-directory: ./openwrt-imagebuilder-*
        run: |
          # Add custom feeds if needed (e.g., for luci-app-openclash, luci-app-nikki etc.)
          echo "src/gz openwrt_luci https://downloads.openwrt.org/releases/${{ inputs.version }}/packages/${{ inputs.target }}/luci" >> repositories.conf
          # Example for third-party: echo "src/gz custom https://example-repo/packages" >> repositories.conf
          make defconfig

      - name: Build custom image
        working-directory: ./openwrt-imagebuilder-*
        run: |
          PACKAGES="luci luci-theme-argon luci-app-openclash luci-app-adguardhome luci-app-quickstart luci-app-dockerman luci-app-nikki luci-app-store luci-app-upnp luci-app-lucky dnsmasq-full -dnsmasq"  # Add/remove packages here, -dnsmasq to replace with full
          make image PROFILE="${{ inputs.profile }}" PACKAGES="$PACKAGES" FILES="../files/" EXTRA_IMAGE_NAME="custom" ROOTFS_PARTSIZE="${{ inputs.rootfs_size }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: ./openwrt-imagebuilder-*/bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}/*
