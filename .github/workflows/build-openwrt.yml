name: 构建 OpenWrt 固件

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenWrt 版本号 (24.10.0)'
        required: true
        default: '24.10.0'
      target:
        description: '目标架构 (x86)'
        required: true
        default: 'x86'
      subtarget:
        description: '子目标 (64)'
        required: true
        default: '64'
      profile:
        description: '设备配置文件 (generic)'
        required: true
        default: 'generic'
      rootfs_size:
        description: '根文件系统分区大小 (MiB, 1024)'
        required: true
        default: '1024'
      include_docker:
        description: '是否包含 Docker 插件'
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'
      enable_pppoe:
        description: '是否配置 PPPoE 拨号信息'
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      pppoe_account:
        description: '宽带账号 (若启用 PPPoE)'
        required: false
      pppoe_password:
        description: '宽带密码 (若启用 PPPoE)'
        required: false

jobs:
  build_job:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4

      - name: 安装依赖工具
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          echo "检查 Docker 版本"
          docker --version

      - name: 创建构建脚本
        run: |
          mkdir -p x86-64/24.10
          cat << 'EOF' > x86-64/24.10/build.sh
          #!/bin/bash
          set -e
          echo "当前目录: $(pwd)"
          echo "构建参数: PROFILE=$PROFILE, INCLUDE_DOCKER=$INCLUDE_DOCKER, ENABLE_PPPOE=$ENABLE_PPPOE"
          
          # 配置软件源
          echo "src/gz openwrt_core https://downloads.openwrt.org/releases/$OPENWRT_VERSION/targets/$TARGET/$SUBTARGET/packages" > repositories.conf
          echo "src/gz openwrt_base https://downloads.openwrt.org/releases/$OPENWRT_VERSION/packages/x86_64/base" >> repositories.conf
          echo "src/gz openwrt_luci https://downloads.openwrt.org/releases/$OPENWRT_VERSION/packages/x86_64/luci" >> repositories.conf
          echo "src/gz openwrt_packages https://downloads.openwrt.org/releases/$OPENWRT_VERSION/packages/x86_64/packages" >> repositories.conf
          echo "src/gz openwrt_routing https://downloads.openwrt.org/releases/$OPENWRT_VERSION/packages/x86_64/routing" >> repositories.conf
          cat repositories.conf
          
          # 配置固件
          PACKAGES="luci luci-theme-argon dnsmasq-full -dnsmasq"
          if [ "$INCLUDE_DOCKER" = "yes" ]; then
            PACKAGES="$PACKAGES luci-app-dockerman docker"
          fi
          if [ "$ENABLE_PPPOE" = "yes" ]; then
            PACKAGES="$PACKAGES pppoe"
            mkdir -p files/etc/uci-defaults
            cat << EOT > files/etc/uci-defaults/99-custom.sh
            uci set network.wan.proto='pppoe'
            uci set network.wan.username='$PPPOE_ACCOUNT'
            uci set network.wan.password='$PPPOE_PASSWORD'
            uci commit network
            EOT
          fi
          
          # 构建固件
          echo "开始构建固件，包列表: $PACKAGES"
          make image PROFILE="$PROFILE" PACKAGES="$PACKAGES" EXTRA_IMAGE_NAME="custom" ROOTFS_PARTSIZE="$ROOTFS_PARTSIZE" FILES="files/"
          EOF
          chmod +x x86-64/24.10/build.sh
          echo "构建脚本内容:"
          cat x86-64/24.10/build.sh

      - name: 验证 PPPoE 输入
        run: |
          if [ "${{ inputs.enable_pppoe }}" == "yes" ]; then
            if [ -z "${{ inputs.pppoe_account }}" ] || [ -z "${{ inputs.pppoe_password }}" ]; then
              echo "错误: 启用 PPPoE 时必须提供宽带账号和密码！"
              exit 1
            fi
          fi

      - name: 构建 OpenWrt 固件
        run: |
          echo "构建参数: PROFILE=${{ inputs.profile }}, INCLUDE_DOCKER=${{ inputs.include_docker }}, ENABLE_PPPOE=${{ inputs.enable_pppoe }}"
          docker run --rm -i \
            --user root \
            -v "${{ github.workspace }}/bin:/home/build/openwrt/bin" \
            -v "${{ github.workspace }}/files:/home/build/openwrt/files" \
            -v "${{ github.workspace }}/x86-64/24.10/build.sh:/home/build/openwrt/build.sh" \
            -e OPENWRT_VERSION="${{ inputs.version }}" \
            -e TARGET="${{ inputs.target }}" \
            -e SUBTARGET="${{ inputs.subtarget }}" \
            -e PROFILE="${{ inputs.profile }}" \
            -e ROOTFS_PARTSIZE="${{ inputs.rootfs_size }}" \
            -e INCLUDE_DOCKER="${{ inputs.include_docker }}" \
            -e ENABLE_PPPOE="${{ inputs.enable_pppoe }}" \
            -e PPPOE_ACCOUNT="${{ inputs.pppoe_account }}" \
            -e PPPOE_PASSWORD="${{ inputs.pppoe_password }}" \
            openwrt/imagebuilder:x86-64-24.10.0 \
            /bin/bash /home/build/openwrt/build.sh

      - name: 生成固件校验和
        run: |
          mkdir -p bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}
          cp bin/*squashfs-combined*.img.gz bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}/
          cd bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}
          for file in *squashfs-combined*.img.gz; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done
          ls -l

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-固件
          path: bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}/*
